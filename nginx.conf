# Global settings (utilize available CPU cores in the container)
worker_processes auto;

events {
    worker_connections 8192;  # High connection concurrency
    multi_accept       on;     # Accept all new connections at once
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Optimized logging (Docker-friendly paths)
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log main;
    error_log   /var/log/nginx/error.log warn;

    # Performance optimizations
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    server_tokens   off;

    # Keepalive settings
    keepalive_timeout  15s;     # Balance between reuse and resource holding
    keepalive_requests 1000;    # Requests per connection

    # Request size limits
    client_max_body_size 10m;

    # Buffer optimization for heavy loads
    proxy_buffer_size    128k;
    proxy_buffers        4 256k;
    proxy_busy_buffers_size 256k;

    # Rate limiting (adjust based on expected traffic)
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    limit_conn addr 1000;  # Increased concurrent connections per IP

    # Upstream configuration for Docker services
    upstream spring_boot_instances {
        least_conn;            # Prefer servers with least active connections
        keepalive 64;          # Keep upstream connections alive
        server server1:8080;   # Docker service names resolve internally
        server server2:8080;
        server server3:8080;
    }

    server {
        listen 80;             # Standard HTTP port inside container
        server_name _;

        # Proxy configuration
        location / {
            proxy_pass http://spring_boot_instances;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # Timeout protections
            proxy_connect_timeout 5s;
            proxy_send_timeout    10s;
            proxy_read_timeout    30s;

            # Buffering and caching
            proxy_buffering on;
            proxy_cache_bypass $http_pragma;
        }

        # Error handling
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}