version: "2.4"

services:
  # PostgreSQL Shard 0
  pg-shard1:
    image: postgres:latest
    container_name: pg-shard1
    command: postgres -c 'max_connections=450'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: shard1db
    ports:
      - "5433:5432"  # Host:Container
    mem_limit: 1g      # Allocate 1GB of memory
    cpus: 2            # Allocate 1 CPU
    networks:
      - sharding-network

  # PostgreSQL Shard 1
  pg-shard2:
    image: postgres:latest
    container_name: pg-shard2
    command: postgres -c 'max_connections=450'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: shard2db
    ports:
      - "5434:5432"  # Host:Container
    mem_limit: 1g      # Allocate 1 GB of memory
    cpus: 2            # Allocate 1 CPU
    networks:
      - sharding-network

  # PostgreSQL Single DB
  pg-single:
    image: postgres:latest
    container_name: pg-single
    command: postgres -c 'max_connections=450'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: singleDb
    ports:
      - "5435:5432"  # Host:Container
    mem_limit: 1g      # Allocate 1 GB of memory
    cpus: 2            # 1 and 2 CPU
    networks:
      - sharding-network

  # Java Server Instances
  server1:
    build: .
    container_name: server1
    ports:
      - "8081:8080"  # Host:Container
    command: ["--server.port=8080"]
    mem_limit: 3g
    cpus: 2
    depends_on:
      - pg-shard1
      - pg-shard2
    networks:
      - sharding-network

  server2:
    build: .
    container_name: server2
    ports:
      - "8082:8080"
    command: ["--server.port=8080"]
    mem_limit: 3g
    cpus: 2
    depends_on:
      - pg-shard1
      - pg-shard2
    networks:
      - sharding-network

  server3:
    build: .
    container_name: server3
    ports:
      - "8083:8080"
    command: ["--server.port=8080"]
    mem_limit: 3g
    cpus: 2
    depends_on:
      - pg-shard1
      - pg-shard2
    networks:
      - sharding-network

  # Nginx Load Balancer
  nginx:
    image: nginx:latest
    container_name: nginx-lb
    depends_on:
      - server1
      - server2
      - server3
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - sharding-network

networks:
  sharding-network:
    driver: bridge
